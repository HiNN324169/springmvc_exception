<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 注册 异常 处理类 -->
    <mvc:annotation-driven></mvc:annotation-driven>


    <!-- 开启注解扫描-->
    <context:component-scan base-package="com.nn"></context:component-scan>

    <!-- 配置 springmvc 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/view/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">

        <!-- 定义异常参数，相当于 catch(Exception e) 中的 e ，配置后该值会自动保存在 request域中
            没有配置时 默认 参数为：exception，在页面上直接获取显示（${requestScope.exception}）
        -->
        <property name="exceptionAttribute" value="e"></property>

        <property name="exceptionMappings">
            <props>
                <!-- 相当于 catch(AccountException e){ 跳转：error}
                    key：你要捕获的异常
                -->
                <prop key="javax.security.auth.login.AccountException">
                    error
                </prop>

                <!-- 捕获多个异常-->
                <prop key="java.rmi.AlreadyBoundException">
                    error
                </prop>
            </props>
        </property>
    </bean>

</beans>